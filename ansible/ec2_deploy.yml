- name: Deploy to EC2
  hosts: localhost
  connection: local

  tasks:
    - name: Locate running EC2 instances
        - ec2_instance_facts:
           region: us-east-1
      register: ec2_info
    - name: Launch EC2 instance
      ec2:
        instance_type: t2.small
        image: ami-085925f297f89fce1
        region: us-east-1
        key_name: test
        vpc_subnet_id: subnet-da8ef1d4
        assign_public_ip: yes
        wait: yes
        count: 1
        group: eshop
        aws_access_key: ASIAVSW6B75AXGB43AFS
        aws_secret_key: KO/6YCu5u84HDuYaXzQlOGSHGdC6+S4Wz1cx98si
        security_token: FwoGZXIvYXdzEOz//////////wEaDNc4cg9xJkgc5DE5lSLJAbXiwpc62Ft2fAl6yZNvBkPq0c9yuzdNhujpegcavkuFK4eCB4WhuWQ1tYokXqeqa+Je6JkqTn5TneRD0fPTj2xr9lTludGMI5EwIaNhha34epwbgrHlcAk+aaVstYsk691moSAYqkt8D97Q3MR2GS7wb22H0TXSHk6R1BvMnKJla8oald5WwBIpY17QYcy4dn+99o5e0RFFZZbxXr9gqit+8p71hzvB8AG0FV1wLH3kc0zjiqEMNUZwTdtXVh5zL1OjmjmJ3kr2PCik88f+BTIt/7Ts5ORlimbLidf7vcJIS+eF5yWvjgws6brh5qXJPKvOB6Q819WxhvR8wqVM
      register: ec2

    - name: Add instance host to group
      add_host: hostname={{ item.public_dns_name }} groupname=launched
      with_items: '{{ec2.instances}}'

    #- name: accept new ssh fingerprints
    #  shell: ssh-keyscan -H {{ item.public_ip }} >> /home/circleci/.ssh/known_hosts
    #  with_items: '{{ ec2.instances }}'

    - name: Wait for SSH connection
      wait_for: host={{ item.public_dns_name }} port=22 delay=30 timeout=300 state=started
      with_items: '{{ec2.instances}}'

- name: Configure EC2
  hosts: launched
  connection: ssh

  tasks:
    - name: Install docker
      apt:
        name: docker.io
        state: present
        update_cache: yes
      become: yes
    - service:
        name: docker
        state: started
        enabled: yes
      become: yes
    - name: Get project files from docker
      git:
        repo: https://github.com/CaptainAgilek/4IT572_ZS_2020_circleci.git
        dest: ./app
    - name: Build docker with eshop
      shell: cd app && docker build -t myeshop:latest .
      become: yes
    - name: Run docker with eshop
      shell: docker run -p 80:3000 myeshop
      async: 120
      poll: 0
      become: yes
    - wait_for:
        port: 80

- name: Terminate previous instances
  hosts: localhost
  connection: local

  tasks:
   - name: Terminate previous instances
     ec2:
       region: us-east-1
       state: 'absent'
       instance_ids: '{{ item.instance_ids }}'
       with_items: '{{ec2_info.instances}}'
