- name: Deploy to EC2
  hosts: localhost
  connection: local

  tasks:
    - name: Locate running EC2 instances
      vars:
        ansible_python_interpreter: /usr/local/bin/python3
      ec2_instance_info:
        region: us-east-1
        aws_access_key: ASIAVSW6B75A6wegtYTJQCtdet5R
        aws_secret_key: LNelyTfp/dYczEhLk7Zwegt7J1dlWleVAtSOergergrehHVmU+MLK
        security_token: FwoGZXIvYXdzEPT//////////wEaDBaJuvqRof2DzrBTACerhgheLJAZ5dd6+QA92Wqotwh55U6NNgsX9GouzValpfZV5yH7nR2pd9By6EqzkpCdOKnoesK3CODWWMUf2Meoo9W3Ed4HZriK70bzlSZJxsElCdvYbNH/nony9cjHLZPNC0vcjD/wlAvN4ioGwnpnSYcXBGgvgiC7Xg6oTntuqx7jQV7itFBilAbXkuW2iAJtdV9DZLIVUDme9b2dCInTi8OeBG6YQzA5yAENogFsjk4tbluMPmZLEek9aWCgjFYn3fZl2aSW+l87wEnNQCfTCiV08n+BTItuB86zp4Ee7Y7E4MFVuVoYF+F8pYiGRJERjtbX/7NkMB3RSCvdgGHFcpMOZQw
      register: ec2_info
    #- name: Debug
    #  debug:
    #    msg: "items: {{ ec2_info }}"
    - name: Launch EC2 instance
      ec2:
        instance_type: t2.small
        image: ami-085925f297f89fce1
        region: us-east-1
        key_name: test
        vpc_subnet_id: subnet-da8ef1d4
        assign_public_ip: yes
        wait: yes
        count: 1
        group: eshop
        aws_access_key: ASIAVSWwetf6B75A5VewfKJOTPM
        aws_secret_key: Qwe/AQPuwerf4ORosUAVbOCRvGy8xczD+4weG1RRPlZ78o
        security_token: FwoGZXIvYXdzEewfPH//////////wEaDDgrS4r/YBhP8rxhciLJAWunUR0+YagHGXIgwegtf41Gyt4IR8WR6CehOXUuz7QaGwAIqr2NUYJ1ccpZ5ku5PuizgS3mdq0IrjfxvS6sNSHUufYvbSWqX5wmgSN3Pk/07WSo4TZrT5d2egvcpmpYBOmbUpvxJUkb9XlHkB0J2KW+F3feZHVCgGa6e8C0WCzQeEeAtCROdPZ24wKSGYcA0nBI2BCu44/xeYEDHlTrvcDNqJ+jkOgMN0bAL9HFCwiKKyzpXLInZoF1moZUHrCkZYxr1hZMXxwIO8E05Giji9Mj+BTItDsKtxT+E08fzntEbuTlcOpf/v2AgduuuuZmjwEzQsr3/987/REZYAVnCrZBn
      register: ec2

    - name: Add instance host to group
      add_host: hostname={{ item.public_dns_name }} groupname=launched
      with_items: '{{ec2.instances}}'

    #- name: accept new ssh fingerprints
    #  shell: ssh-keyscan -H {{ item.public_ip }} >> /home/circleci/.ssh/known_hosts
    #  with_items: '{{ ec2.instances }}'

    - name: Wait for SSH connection
      wait_for: host={{ item.public_dns_name }} port=22 delay=30 timeout=300 state=started
      with_items: '{{ec2.instances}}'

- name: Configure EC2
  hosts: launched
  connection: ssh

  tasks:
    - name: Install docker
      apt:
        name: docker.io
        state: present
        update_cache: yes
      become: yes
    - service:
        name: docker
        state: started
        enabled: yes
      become: yes
    - name: Get project files from docker
      git:
        repo: https://github.com/CaptainAgilek/4IT572_ZS_2020_semestral.git
        dest: ./app
    - name: Build docker with eshop
      shell: cd app && docker build -t myeshop:latest .
      become: yes
    - name: Run docker with eshop
      shell: docker run -p 80:3000 myeshop
      async: 120
      poll: 0
      become: yes
    - wait_for:
        port: 80

- name: Terminate previous instances
  hosts: localhost
  connection: local

  tasks:
   #- name: Debug
   #   debug:
   #     msg: "items: {{ ec2_info }}"
   - name: Terminate previous instances
     ec2:
       region: us-east-1
       state: 'absent'
       instance_ids: '{{ item.instance_id }}'
       aws_access_key: ASIAVwefSW6B75A5VKJwgtOTPM
       aws_secret_key: Qwe/AQPu4OweRosUAVbOCRvGy8xczD+4Gw1RRPlZ78o
       security_token: FwoGZXIvYweXdzEPH//////////wEaDDgrS4r/YBhP8rxhciLJAWuwegnUR0+YagHGXIg41Gyt4IweR8WR6CehOXUuz7QaGwAIqr2NUYJ1ccpZ5ku5PuizgS3mdq0IrjfxvS6sNSHUufYvbSWqX5wmgSN3Pk/07WSo4TZrT5d2egvcpmpYBOmbUpvxJUkb9XlHkB0J2KW+F3feZHVCgGa6e8C0WCzQeEeAtCROdPZ24wKSGYcA0nBI2BCu44/xeYEDHlTrvcDNqJ+jkOgMN0bAL9HFCwiKKyzpXLInZoF1moZUHrCkZYxr1hZMXxwIO8E05Giji9Mj+BTItDsKtxT+E08fzntEbuTlcOpf/v2AgduuuuZmjwEzQsr3/987/REZYAVnCrZBn
     loop: "{{ ec2_info.instances }}"
     loop_control:
       label: "{{ item.instance_id }}"
