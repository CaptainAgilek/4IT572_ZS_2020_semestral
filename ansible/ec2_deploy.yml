- name: Deploy to EC2
  hosts: localhost
  connection: local

  tasks:
    - name: Launch EC2 instance
      ec2:
        instance_type: t2.micro
        image: ami-085925f297f89fce1
        region: us-east-1
        key_name: test
        vpc_subnet_id: subnet-da8ef1d4
        assign_public_ip: yes
        wait: yes
        count: 1
        group: eshop
        aws_access_key: ASIAVSW6B75AWWCR4GPR
        aws_secret_key: 0f+02hZFPE3D9yzPZvpRfAqKKA537yCZAqfOt+12
        security_token: FwoGZXIvYXdzEN///////////wEaDO0HHP5vw5lw5KGaMCLJAfSe9vRtuVAAQFWvadppLMMqBOMq3+4+Egdec5xKcbrnYUTr4VRh8xcxve2bUXklYGd8Y2FvBDgm3qarOCyp5pBcXW7ziVoLJcH2fInnY2PcNkEFHE3SfW26OAyM4HFv56cxsppKnNcDZHc/c/h27ExgXpiSm1bWU5GvSlWzURh/+oce6gRD8oF2iX3ApyECi0kjtx+h6kxd4Gpgc4cd1/vIcWSHvxGxa3O950Lsy/T46bsOCxQjEbiRwAVCinaqqKFJHuCiliRV+ii5/sT+BTItE4NIvUdRXTSLYQ8ovVxn5eybQ8mQTumBUouLitHmVQnOmIHun2YFYszv43Rb
      register: ec2

    - name: Add instance host to group
      add_host: hostname={{ item.public_dns_name }} groupname=launched
      with_items: '{{ec2.instances}}'

    - name: Wait for SSH connection
      wait_for: host={{ item.public_dns_name }} port=22 delay=30 timeout=300 state=started
      with_items: '{{ec2.instances}}'

- name: Configure EC2
  hosts: launched
  connection: ssh

  tasks:
    - name: Install docker
      apt:
        name: docker.io
        state: present
        update_cache: yes
      become: yes
    - service:
        name: docker
        state: started
        enabled: yes
      become: yes
    - name: Get project files from docker
      git:
        repo: https://github.com/CaptainAgilek/4IT572_ZS_2020_circleci.git
        dest: ./app
    - name: Build docker with eshop
      shell: cd app && docker build -t myeshop:latest .
      become: yes
    - name: Run docker with eshop
      shell: docker run -p 80:3000 myeshop
      async: 50
      poll: 10
      become: yes
    - wait_for:
        port: 80
